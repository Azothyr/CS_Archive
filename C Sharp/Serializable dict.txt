using System;
using System.Collections.Generic;
using UnityEngine;

[Serializable]
public class SerializableDictionaryItem
{
    public string key;
    public string value; // For simplicity, let's use strings, but you can make this more complex if needed
}

[CreateAssetMenu]
public class DataHolder : ScriptableObject
{
    [SerializeField] private List<SerializableDictionaryItem> _items = new List<SerializableDictionaryItem>();

    private Dictionary<string, string> _dictionary;

    private void OnEnable()
    {
        _dictionary = new Dictionary<string, string>();
        foreach (var item in _items)
        {
            _dictionary.Add(item.key, item.value);
        }
    }

    public void AddData(string key, string value)
    {
        _dictionary[key] = value;

        // Optional: Keep the serialized list up-to-date
        var item = _items.Find(i => i.key == key);
        if (item != null)
        {
            item.value = value;
        }
        else
        {
            _items.Add(new SerializableDictionaryItem { key = key, value = value });
        }
    }

    public string GetData(string key)
    {
        return _dictionary.ContainsKey(key) ? _dictionary[key] : null;
    }
}
